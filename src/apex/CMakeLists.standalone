# Create a library called "Apex" which includes the source file "apex.cxx". 
# The extension is already found. Any number of sources could be listed here. 

include_directories(${PROJECT_BINARY_DIR}/src/apex ${APEX_SOURCE_DIR}/src/contrib)

if (TAU_FOUND)
SET(tau_SOURCE tau_listener.cpp)
endif(TAU_FOUND)

if (BFD_FOUND)
SET(bfd_SOURCE apex_bfd.cpp address_resolution.cpp)
endif(BFD_FOUND)

if (APEX_HAVE_PROC)
SET(PROC_SOURCE proc_read.cpp)
endif(APEX_HAVE_PROC)

if (OMPT_FOUND)
SET(OMPT_SOURCE apex_ompt.cpp)
endif(OMPT_FOUND)

if (SOS_FOUND)
SET(SOS_SOURCE sos_handler.cpp)
endif(SOS_FOUND)

if (LM_SENSORS_FOUND)
SET(SENSOR_SOURCE sensor_data.cpp)
endif(LM_SENSORS_FOUND)

SET(all_SOURCE task_identifier.cpp apex.cpp thread_instance.cpp event_listener.cpp handler.cpp concurrency_handler.cpp policy_handler.cpp utils.cpp ${tau_SOURCE} profiler_listener.cpp ${bfd_SOURCE} apex_options.cpp apex_policies.cpp ${PROC_SOURCE} ${OMPT_SOURCE} ${SENSOR_SOURCE} ${SOS_SOURCE})

#add_library (apex_objlib OBJECT ${all_SOURCE})
#if (BUILD_STATIC_EXECUTABLES)
    #add_library (apex STATIC $<TARGET_OBJECTS:apex_objlib>)
    #set_target_properties(apex PROPERTIES OUTPUT_NAME apex)
#else()
    #add_library (apex SHARED $<TARGET_OBJECTS:apex_objlib>)
    #set_target_properties(apex PROPERTIES OUTPUT_NAME apex)
    #target_link_libraries(apex ${LIBS})
    #add_library (apex_static STATIC $<TARGET_OBJECTS:apex_objlib>)
    #set_target_properties(apex_static PROPERTIES OUTPUT_NAME apex)
#endif()
add_library (apex ${all_SOURCE})

if(APEX_INTEL_MIC)
    #add_dependencies (apex_objlib project_activeharmony project_binutils project_boost)
    add_dependencies (apex project_activeharmony project_binutils project_boost)
else()
    #add_dependencies (apex_objlib project_activeharmony project_binutils)
    add_dependencies (apex project_activeharmony project_binutils)
endif(APEX_INTEL_MIC)

# If we are building libapex.so, we want to include all the other libraries,
# so that we can LD_PRELOAD this library with all requirements met.
if (NOT BUILD_STATIC_EXECUTABLES)
    target_link_libraries(apex ${LIBS})
endif()

# add the binary tree to the search path for include files
# so that we will find ApexConfig.h
if(HAVE_RCR)
include_directories("${PROJECT_BINARY_DIR}/src/apex" ${RCR_INCLUDE_PATH})
else()
include_directories("${PROJECT_BINARY_DIR}/src/apex")
endif()

INSTALL(FILES apex.h 
    apex_api.hpp
    apex_types.h
    apex_policies.h
    apex_policies.hpp
    handler.hpp
    profile.hpp
    apex_export.h
    utils.hpp
    apex_options.hpp
    profiler.hpp
    task_identifier.hpp
    DESTINATION include)

#if (BUILD_STATIC_EXECUTABLES)
    INSTALL(TARGETS apex RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
#else()
    #INSTALL(TARGETS apex apex_static RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
#endif()

